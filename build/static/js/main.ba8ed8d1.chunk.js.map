{"version":3,"sources":["components/Header/Navigation/NavStatesContext.js","components/Pages/Home/EmbedItem.js","components/Pages/Home/index.js","components/Pages/About/index.js","components/Pages/Projects/index.js","components/Header/Navigation/NavOptionsDisplay.js","components/Header/Navigation/NavOptions.js","components/Header/Navigation/index.js","components/Header/index.js","components/App.js","serviceWorker.js","index.js"],"names":["NavStatesContext","createContext","NavStatesProvider","props","useState","selected","setSelected","Provider","value","children","EmbedItem","itemHeight","src","width","height","title","caption","percentage","item","itemPercentage","itemTitle","split","window","innerWidth","pageWidth","setPageWidth","parseInt","itemWidth","setItemWidth","includes","className","url","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","toString","frameBorder","allow","allowFullScreen","alt","handleResize","undefined","useEffect","addEventListener","Home","id","About","Projects","NavOptionsDisplay","name","NavOptions","useContext","location","href","setLocation","updateStates","toLowerCase","updateLocation","e","to","onClick","NavigationBar","Header","App","document","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ba8ed8d1.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const NavStatesContext = createContext();\n\nexport const NavStatesProvider = props => {\n\tconst [selected, setSelected] = useState({\n\t\t'Home': false,\n\t\t'About': false,\n\t\t'Projects': false,\n\t});\n\t\n\treturn (\n\t\t<NavStatesContext.Provider value={[selected,setSelected]}>\n\t\t\t{props.children}\n\t\t</NavStatesContext.Provider>\n\t);\n}","import React, { useState, useEffect } from \"react\";\nimport InstagramEmbed from \"react-instagram-embed\";\n\nconst EmbedItem = ({ src, width, height, title, caption, percentage }) => {\n\tlet itemHeight;\n\tlet item = <div></div>;\n\tconst itemPercentage = percentage || 0.8;\n\tconst itemTitle = title || src.split(\"/\")[4];\n\tconst [pageWidth, setPageWidth] = useState(window.innerWidth);\n\tconst [itemWidth, setItemWidth] = useState(\n\t\tparseInt(width, 10) || pageWidth * itemPercentage\n\t);\n\n\tconst embedInstagram = () => {\n\t\titem = (\n\t\t\t<InstagramEmbed\n\t\t\t\tclassName=\"instaPost\"\n\t\t\t\turl={src}\n\t\t\t\tmaxWidth={itemWidth}\n\t\t\t\thideCaption={true}\n\t\t\t\tcontainerTagName=\"div\"\n\t\t\t\tprotocol=\"\"\n\t\t\t\tinjectScript\n\t\t\t\tonLoading={() => {}}\n\t\t\t\tonSuccess={() => {}}\n\t\t\t\tonAfterRender={() => {}}\n\t\t\t\tonFailure={() => {}}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst embedYoutube = () => {\n\t\tconst widthToHeightRatio = 315 / 560;\n\t\titemHeight = itemWidth * widthToHeightRatio;\n\t\titem = (\n\t\t\t<iframe\n\t\t\t\tclassName=\"history-item-youtube\"\n\t\t\t\ttitle={itemTitle}\n\t\t\t\twidth={itemWidth.toString()}\n\t\t\t\theight={itemHeight.toString()}\n\t\t\t\tsrc={src}\n\t\t\t\tframeBorder=\"0\"\n\t\t\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n\t\t\t\tallowFullScreen></iframe>\n\t\t);\n\t};\n\n\tconst embedImg = () => {\n\t\titemHeight = height;\n\t\titem = (\n\t\t\t<img\n\t\t\t\tsrc={src}\n\t\t\t\talt=\"place-holder\"\n\t\t\t\twidth={itemWidth}\n\t\t\t\theight={itemHeight}\n\t\t\t\ttitle={title}\n\t\t\t/>\n\t\t);\n\t};\n\n\tif (src.includes(\"instagram\")) {\n\t\tembedInstagram();\n\t} else if (src.includes(\"youtube\")) {\n\t\tembedYoutube();\n\t} else {\n\t\tembedImg();\n\t}\n\n\tconst handleResize = () => {\n\t\tsetPageWidth(window.innerWidth);\n\t\t// console.log(itemWidth * (1 / itemPercentage));\n\t\tif (pageWidth < width * (1 / itemPercentage) || width === undefined) {\n\t\t\tsetItemWidth(pageWidth * itemPercentage);\n\t\t} else {\n\t\t\tsetItemWidth(width);\n\t\t}\n\t};\n\n\tuseEffect(handleResize, []);\n\n\twindow.addEventListener(\"resize\", handleResize);\n\n\treturn (\n\t\t<div className=\"history-item\">\n\t\t\t<h1 className=\"history-item-title\">{itemTitle}</h1>\n\t\t\t{item}\n\t\t\t<figcaption className=\"history-item-caption\">{caption}</figcaption>\n\t\t</div>\n\t);\n};\n\nexport default EmbedItem;\n","import React from \"react\";\nimport EmbedItem from \"./EmbedItem\";\nimport \"./home.css\";\n\nfunction Home() {\n\tconst videoWidth = 400;\n\treturn (\n\t\t<div className=\"Home\" id=\"Page\">\n\t\t\t<EmbedItem\n\t\t\t\tsrc=\"https://www.youtube-nocookie.com/embed/TFHPFltoJO4\"\n\t\t\t\ttitle=\"Haas Automation, Inc\"\n\t\t\t\twidth={videoWidth}\n\t\t\t\tcaption=\"I coded a Nachi robot to interact with \n\t\t\t\ta HAAS CNC Lathe to pick up parts from a tray, \n\t\t\t\thave one side of it cut down to shape, then flip \n\t\t\t\tthe part so the opposite side can be lathed. No \n\t\t\t\tactual cutting occured in this video sample.\"\n\t\t\t/>\n\t\t\t<EmbedItem\n\t\t\t\tsrc=\"https://www.youtube-nocookie.com/embed/1Dp1Uwp6pMk\"\n\t\t\t\ttitle=\"Team 696\"\n\t\t\t\twidth={videoWidth}\n\t\t\t\tcaption=\"On FRC Team 696, I was the head programmer \n\t\t\t\tof the team. I worked with a small team of developers\n\t\t\t\tto get our competition robot capable of performing \n\t\t\t\ttasks autonomously and then be remotely controlled by \n\t\t\t\tthe driver(me) of the robot. This video shows a \n\t\t\t\trecap of the 2017 LA Regional competition where we \n\t\t\t\twon first place and moved up to championships for the \n\t\t\t\tfirst time in our teams' history.\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./About.css\";\n\nfunction About() {\n\treturn (\n\t\t<div className=\"About\" id=\"Page\">\n\t\t\t<h1>Daniel Torres</h1>\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://lh3.googleusercontent.com/3Tg7KRRLhvnqdL5efqpMUW-uWNU7AyaYg16VojkCzGcy0nUkidsPASYosvFvYWlkrCqebGNfta43co3QneoPh3zvIrk1vWViMuJb1qk7BP5Vf9cK8VzC0CyVvzuK_YvcLz-BWd-MsX4=w2400\"\n\t\t\t\t\tclassName=\"profile-picture\"\n\t\t\t\t\talt=\"profile\"\n\t\t\t\t/>\n\t\t\t\t<p className=\"bio\">\n\t\t\t\t\tDaniel has been programming for several years. He started programming\n\t\t\t\t\tin middle school as part of its lego robotics team. He continued his\n\t\t\t\t\tprogramming career with the FIRST Robotics Competition where he was\n\t\t\t\t\tpart of Team 696, The Circuit Breakers. Daniel was the head programmer\n\t\t\t\t\tof his team and during this time he learned how to program in LabView,\n\t\t\t\t\tJAVA, and C++, and really found his love for programming. He continued\n\t\t\t\t\this work with programming as a software test engineer at HAAS\n\t\t\t\t\tAutomation where he learned how to test software by finding\n\t\t\t\t\tvulnerabilities and misbehavior. Daniel is now working on web\n\t\t\t\t\tdevelopment and has been focusing on growing his skills with ReactJS\n\t\t\t\t\tand Redux. Some of his work in ReactJS and Redux can be found in the\n\t\t\t\t\t'Projects' tab.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default About;\n","import React from \"react\";\n\nfunction Projects() {\n\treturn (\n\t\t<div className=\"Projects\" id=\"Page\">\n\t\t\t<h1>Projects</h1>\n\t\t</div>\n\t);\n}\n\nexport default Projects;\n","import React from \"react\";\n\nfunction NavOptionsDisplay({ name, selected }) {\n\treturn (\n\t\t<h1 className={selected ? \"NavOptionsSelected\" : \"NavOptions\"}>{name}</h1>\n\t);\n}\n\nexport default NavOptionsDisplay;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavOptionsDisplay from \"./NavOptionsDisplay\";\nimport { NavStatesContext } from \"./NavStatesContext\";\n\nfunction NavOptions({ name }) {\n\tconst [selected, setSelected] = useContext(NavStatesContext);\n\tconst [location, setLocation] = useState(window.location.href.split(\"/\")[3]);\n\n\tconst updateStates = () => {\n\t\tswitch (location.toLowerCase()) {\n\t\t\tcase \"\":\n\t\t\tcase \"home\":\n\t\t\t\tsetSelected({\n\t\t\t\t\tHome: true,\n\t\t\t\t\tAbout: false,\n\t\t\t\t\tProjects: false\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"about\":\n\t\t\t\tsetSelected({\n\t\t\t\t\tHome: false,\n\t\t\t\t\tAbout: true,\n\t\t\t\t\tProjects: false\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"projects\":\n\t\t\t\tsetSelected({\n\t\t\t\t\tHome: false,\n\t\t\t\t\tAbout: false,\n\t\t\t\t\tProjects: true\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetSelected({\n\t\t\t\t\tHome: false,\n\t\t\t\t\tAbout: false,\n\t\t\t\t\tProjects: false\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst updateLocation = e => {\n\t\tif (location === \"\") setLocation(\"Home\");\n\t\tsetLocation(name);\n\t\tupdateStates();\n\t};\n\n\tuseEffect(() => {\n\t\tupdateLocation();\n\t\tupdateStates();\n\t}, []);\n\n\treturn (\n\t\t<Link\n\t\t\tclassName=\"NavLinks\"\n\t\t\tto={name === \"Home\" ? \"/\" : `/${name}`}\n\t\t\tonClick={updateLocation}>\n\t\t\t<NavOptionsDisplay name={name} selected={selected[name]} />\n\t\t</Link>\n\t);\n}\n\nexport default NavOptions;\n","import React from \"react\";\nimport NavOptions from \"./NavOptions\";\nimport \"./Navigation.css\";\n\nfunction NavigationBar() {\n\treturn (\n\t\t<nav className=\"NavigationBar\">\n\t\t\t<NavOptions name=\"Home\" />\n\t\t\t<NavOptions name=\"About\" />\n\t\t\t<NavOptions name=\"Projects\" />\n\t\t</nav>\n\t);\n}\nexport default NavigationBar;\n","import React from \"react\";\nimport NavigationBar from \"./Navigation\";\nimport \"./Header.css\";\n\nfunction Header() {\n\treturn (\n\t\t<div className=\"Header\">\n\t\t\t<h2 className=\"Title\">It's Daniel Torres</h2>\n\t\t\t<NavigationBar />\n\t\t</div>\n\t);\n}\n\nexport default Header;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { NavStatesProvider } from \"./Header/Navigation/NavStatesContext\";\nimport Home from \"./Pages/Home\";\nimport About from \"./Pages/About\";\nimport Projects from \"./Pages/Projects\";\nimport Header from \"./Header\";\n\nfunction App() {\n\tdocument.title = \"It's Daniel Torres\";\n\n\treturn (\n\t\t<NavStatesProvider>\n\t\t\t<BrowserRouter>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t\t\t<Route path=\"/projects\" component={Projects} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t</NavStatesProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}